# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]

env:
  IMAGE_NAME: ${{ github.event.repository.name }}
  IMAGE_TAG: latest
  PORT: 8080
  DOCKER_NETWORK: emsp-network
  SPRING_PROFILE: prod

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11  # 可以改版本
        uses: actions/setup-java@v3
        with:
          java-version: '11'  # 可以改版本
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml -Dmaven.test.skip=true

      # 连接到远程服务器
      - name: Connect to server
        uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # 初始化 knownhosts
      - name: Setup knownhosts
        run: ssh-keyscan ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      # 触发服务器部署脚本
      - name: Trigger server deployment script
        run: |
          ssh root@${{ secrets.SERVER_HOST }} "rm -rf /app/target/* || true"
          scp target/*.jar root@${{ secrets.SERVER_HOST }}:/app/target
          scp Dockerfile root@${{ secrets.SERVER_HOST }}:/app
          ssh root@${{ secrets.SERVER_HOST }} "cd /app && docker build --no-cache=true -t ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} . || true"
          ssh root@${{ secrets.SERVER_HOST }} "docker stop ${{ env.IMAGE_NAME }} || true"
          ssh root@${{ secrets.SERVER_HOST }} "docker rm ${{ env.IMAGE_NAME }} || true"
          ssh root@${{ secrets.SERVER_HOST }} "docker run -p ${{ env.PORT }}:${{ env.PORT}} --name ${{ env.IMAGE_NAME }} --network ${{ env.DOCKER_NETWORK }} --network-alias ${{ env.IMAGE_NAME }} -e SPRING_PROFILE=${{ env.SPRING_PROFILE }} -d ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"
